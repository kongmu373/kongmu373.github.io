<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kongmu373的博客</title>
    <link>https://kongmu373.github.io/posts/</link>
    <description>Recent content in Posts on kongmu373的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 27 May 2020 10:27:22 +0800</lastBuildDate>
    
	<atom:link href="https://kongmu373.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>几种排序算法的实现</title>
      <link>https://kongmu373.github.io/posts/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 27 May 2020 10:27:22 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>冒泡排序 复杂度O(n^2) 空间复杂度(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class BubbleSort { public static void sort(int[] array) { for (int i = 0; i &amp;lt; array.length; i++) { for (int j = 0; j &amp;lt; array.length - i - 1; j++) { if (array[i] &amp;gt; array[i + 1]) { swap(array, i, i + 1); } } } } private static void swap(int[] array, int i, int j) { int temp = array[i]; array[i] = array[j]; array[j] = temp; } } 快速排序(不是原地版本) 复杂度O(n(logn)) 空间复</description>
    </item>
    
    <item>
      <title>Lambda表达式与函数接口</title>
      <link>https://kongmu373.github.io/posts/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Tue, 26 May 2020 14:05:22 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3/</guid>
      <description>Lambda表达式与函数式接口 Lambda表达式 Lambda 是什么? 可以把Lambda表达式理解为 简洁地表示可传递匿名函数的一种方式 Lambda表达式没有名称，但它有参数列表，函数主体，返回类型，有时还可以抛出的异常列表。 有以下特性: 匿名:与匿名函数一样不需要方法名 函数:有参数列表，函数主</description>
    </item>
    
    <item>
      <title>函数式编程与Java8新特性</title>
      <link>https://kongmu373.github.io/posts/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%B8%8EJava8%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 26 May 2020 08:45:15 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%B8%8EJava8%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>函数 就是 参数 映射成返回值. 函数式编程 &amp;ldquo;函数式编程&amp;rdquo; 是一种 &amp;ldquo;编程范式&amp;rdquo; 主要思想: 把运算过程尽量写成一系列嵌套的函数调用 -&amp;gt; y= f(g(x)) &amp;lt;=&amp;gt; y= g(x).f(). 惰性计算: 并不立刻算，只有在需要产生表达式的值才开始进行运算 函数是 &amp;ldquo;第一等公民&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Java包管理</title>
      <link>https://kongmu373.github.io/posts/java%E5%8C%85%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 25 May 2020 14:29:03 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/java%E5%8C%85%E7%AE%A1%E7%90%86/</guid>
      <description>包是什么? 就是把许多类放在一起打的压缩包 什么是包管理 包管理的本质就是告诉JVM如何找到所需的第三方类库 为什么要用包管理呢？ 从运行一个JAVA程序说起： JVM的工作内容: 执行一个类的字节码 加入这个过程中碰到了新的类， 加载它 那么，去哪里加载这些类呢?(通过类路径) 类路径 (Classpath) 在哪可以找到</description>
    </item>
    
    <item>
      <title>Git常用命令</title>
      <link>https://kongmu373.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 25 May 2020 14:00:44 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>git git 六行配置 git config --global user.name 你的英文名 git config --global user.email 你的邮箱 git config --global push.default simple git config --global core.quotepath false git config --global core.editor &amp;quot;code --wait&amp;quot; git config --global core.autocrlf input git 常用命令 - git config - git add 路径 - git status -sb - git commit -v - git branch x - git checkout x - git merge - git commit - git branch -d x - git log - git relog - git reset --hard XXXXX GitHub 存储代码 常用两行命令 git remote add origin git@xxxxxx git push -u origin master SSH key 验证身份 生成 SSH key 测试 SSH key 上传和下载代码 git pull /</description>
    </item>
    
    <item>
      <title>First Blood</title>
      <link>https://kongmu373.github.io/posts/first-blood/</link>
      <pubDate>Mon, 25 May 2020 10:44:19 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/first-blood/</guid>
      <description>大家好 我的博客开通了!</description>
    </item>
    
  </channel>
</rss>