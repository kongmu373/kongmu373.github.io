<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>日志系统 on kongmu373的博客</title>
    <link>https://kongmu373.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 日志系统 on kongmu373的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 27 Jun 2020 20:32:29 +0800</lastBuildDate>
    
	<atom:link href="https://kongmu373.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP与socket 2</title>
      <link>https://kongmu373.github.io/posts/java/TCP%E4%B8%8Esocket-2/</link>
      <pubDate>Sat, 27 Jun 2020 20:32:29 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/java/TCP%E4%B8%8Esocket-2/</guid>
      <description>Socket server与client传输数据 传输数据的例子(html或者js) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 public static void main(String[] args) throws Exception { int port = 8080; ServerSocket socket = new ServerSocket(); socket.bind(new InetSocketAddress(&amp;#34;127.0.0.1&amp;#34;, port)); while (true) { Socket from = socket.accept(); BufferedReader reader = new BufferedReader(new InputStreamReader(from.getInputStream())); String line; List&amp;lt;String&amp;gt; headers = new ArrayList&amp;lt;&amp;gt;(); while (!(line = reader.readLine()).isEmpty()) { System.out.println(line); headers.add(line); } String firstLine = headers.get(0); String[] s = firstLine.split(&amp;#34; &amp;#34;); System.out.println(s[1]); from.getOutputStream().write(&amp;#34;HTTP/1.1 200 OK\r\n&amp;#34;.getBytes()); if (s[1].endsWith(&amp;#34;.js&amp;#34;)) {</description>
    </item>
    
    <item>
      <title>TCP与socket</title>
      <link>https://kongmu373.github.io/posts/java/TCP%E4%B8%8Esocket/</link>
      <pubDate>Mon, 22 Jun 2020 20:29:53 +0800</pubDate>
      
      <guid>https://kongmu373.github.io/posts/java/TCP%E4%B8%8Esocket/</guid>
      <description>通信协议没有100%可靠的 经典的红军/蓝军问题 红军 - 敌人 - 蓝军 红军与蓝军交换信息都要经过敌人 因此无论怎么发，都没有100%可靠的通信协议 计算机网络与传统电信网络 传统电信网络 (电话网络) 电路交换网路 (震动-电信号) 计算机网络 目标:实现全球的连接，并且物理无法毁坏的网络 分组交换(在不</description>
    </item>
    
  </channel>
</rss>